/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicativoagro;

import static aplicativoagro.Inicio.usuarioAtual;
import java.net.ConnectException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author Willian
 */
public class TelaAdicionarVenda extends javax.swing.JFrame {
    int idVenda=-1;

    /**
     * Creates new form AdicionarVenda
     */
    public TelaAdicionarVenda() {
        
        try {
            ConexaoBancoDados.VendaDAO.criarTabela();
        } catch (Exception ex) {
            Logger.getLogger(TelaAdicionarVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Falha ao criar tabela de venda" + ex);
        }
        initComponents();
        AutoCompleteDecorator.decorate(comprador_CBox);
        AutoCompleteDecorator.decorate(produto_CBox);
        try {
            List<String> listaNomesCompradores= ConexaoBancoDados.ClienteDAO.carregarNomeClientes();
            for (String comprador : listaNomesCompradores){
                comprador_CBox.addItem(comprador);
            }
        } catch (SQLException | ClassNotFoundException | ConnectException ex) {
            Logger.getLogger(TelaAdicionarVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Falha ao carregar clientes" + ex);
        }
        List<String> listaNomesProdutos= ConexaoBancoDados.ProdutoDAO.carregarNomeProdutos();
        for (String produto : listaNomesProdutos){
            produto_CBox.addItem(produto);
        }
        try {
            atualizarTabela();
        } catch (SQLException | ClassNotFoundException | ConnectException ex) {
            Logger.getLogger(TelaAdicionarVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Falha na atualização da tabela");
        } 
    }

    
    private void atualizarTabela() throws SQLException, ClassNotFoundException, ConnectException{
        DefaultTableModel model = (DefaultTableModel)tabelaVendas.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        List<Venda> vendas = ConexaoBancoDados.VendaDAO.carregarTodasVendas();
        for (Venda venda : vendas){
            model.addRow(new Object[]{
                venda.getIdVenda(),
                ConexaoBancoDados.ClienteDAO.pesquisaPorId(venda.getIdCliente()),
                ConexaoBancoDados.ProdutoDAO.pesquisaPorId(venda.getIdProduto()),
                venda.getQuantidade(),
                venda.getValorTotal(),
                venda.getValorPago(),
                venda.getDataVenda(),
                venda.getDataQuitacao()
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        strQuantidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        strValorTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        strValorPago = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        strDataVenda = new javax.swing.JFormattedTextField();
        salvar = new javax.swing.JButton();
        atualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        strDataQuitacao = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        deletar = new javax.swing.JButton();
        comprador_CBox = new javax.swing.JComboBox<>();
        produto_CBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Comprador");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Produto");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Quantidade");

        strQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strQuantidadeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Valor total");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Valor Pago");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Data Venda");

        try {
            strDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        atualizar.setText("Atualizar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Data Quitação");

        try {
            strDataQuitacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Comprador", "Produto", "Quantidade", "Valor Total", "Valor Pago", "Data Venda", "Data Quitação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVendasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaVendas);

        deletar.setText("Deletar");
        deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(strQuantidade)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 240, Short.MAX_VALUE))
                            .addComponent(strValorTotal)
                            .addComponent(comprador_CBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(produto_CBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(302, 302, 302))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(strDataQuitacao, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(strDataVenda, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(strValorPago, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(atualizar)
                                        .addGap(18, 18, 18)
                                        .addComponent(deletar)))
                                .addGap(57, 57, 57))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comprador_CBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(produto_CBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strDataQuitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(strValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salvar)
                        .addComponent(atualizar)
                        .addComponent(deletar)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void strQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strQuantidadeActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        Venda venda = new Venda();
        venda.setIdCliente(ConexaoBancoDados.ClienteDAO.pesquisaPorNome(((String) comprador_CBox.getSelectedItem())));
        venda.setIdProduto(ConexaoBancoDados.ProdutoDAO.pesquisaPorNome(((String)produto_CBox.getSelectedItem())));
        venda.setQuantidade(Double.parseDouble(strQuantidade.getText()));
        venda.setValorPago(Double.parseDouble(strValorPago.getText()));
        venda.setValorTotal(Double.parseDouble(strValorTotal.getText()));
        venda.setDataVenda(strDataVenda.getText());
        venda.setDataQuitacao(strDataQuitacao.getText());
        // SALVAR A VENDA
        int id = ConexaoBancoDados.VendaDAO.salvarVenda(venda);
        venda.setIdVenda(id);
        //SALVAR LOG
        Log.salvarLogVendas(venda.getIdVenda(),"Salvou");
        
        try {
            atualizarTabela();
        } catch (SQLException | ClassNotFoundException | ConnectException ex) {
            Logger.getLogger(TelaAdicionarVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Falha na atualização da tabela");
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void tabelaVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendasMouseClicked
        int row = tabelaVendas.rowAtPoint(evt.getPoint());
        strQuantidade.setText(tabelaVendas.getModel().getValueAt(row, 3).toString());
        strValorTotal.setText(tabelaVendas.getModel().getValueAt(row, 4).toString());
        strValorPago.setText(tabelaVendas.getModel().getValueAt(row, 5).toString());
        strDataVenda.setText(tabelaVendas.getModel().getValueAt(row, 6).toString());
        strDataQuitacao.setText(tabelaVendas.getModel().getValueAt(row, 7).toString());
        this.idVenda=(int) tabelaVendas.getModel().getValueAt(row, 0);
        comprador_CBox.setSelectedItem(tabelaVendas.getModel().getValueAt(row, 1).toString());
        produto_CBox.setSelectedItem(tabelaVendas.getModel().getValueAt(row, 2).toString());
    }//GEN-LAST:event_tabelaVendasMouseClicked

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        Venda venda = new Venda();
        venda.setIdCliente(ConexaoBancoDados.ClienteDAO.pesquisaPorNome(((String) comprador_CBox.getSelectedItem())));
        venda.setIdProduto(ConexaoBancoDados.ProdutoDAO.pesquisaPorNome(((String)produto_CBox.getSelectedItem())));
        venda.setQuantidade(Double.parseDouble(strQuantidade.getText()));
        venda.setValorTotal(Double.parseDouble(strValorTotal.getText()));
        venda.setValorPago(Double.parseDouble(strValorPago.getText()));
        venda.setDataVenda(strDataVenda.getText());
        venda.setDataQuitacao(strDataQuitacao.getText());
        venda.setIdVenda(this.idVenda);
        ConexaoBancoDados.VendaDAO.atualizarVenda(venda);
        //SALVANDO LOG
        Log.salvarLogVendas(venda.getIdVenda(),"Atualizou");
        this.idVenda=-1;
        try {
            atualizarTabela();
        } catch (SQLException | ClassNotFoundException | ConnectException ex) {
            Logger.getLogger(TelaAdicionarVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Falha na atualização da tabela");
        }
    }//GEN-LAST:event_atualizarActionPerformed

    private void deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarActionPerformed
        if (usuarioAtual.getFuncao().equalsIgnoreCase("Administrador")){
            if(0==JOptionPane.showConfirmDialog(null, "Deseja realmente deletar a venda?", "", JOptionPane.YES_NO_OPTION)){
                ConexaoBancoDados.VendaDAO.deletarVenda(this.idVenda);
                //SALVANDO LOG
                Log.salvarLogVendas(this.idVenda,"Deletou");
                JOptionPane.showMessageDialog(null,"Venda deletada com sucesso");
                try {
                    atualizarTabela();
                } catch (SQLException | ClassNotFoundException | ConnectException ex) {
                    Logger.getLogger(TelaAdicionarProduto.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Falha na atualização da tabela");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"Você não possui permissões para utilizar este recurso");
        }
    }//GEN-LAST:event_deletarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizar;
    private javax.swing.JComboBox<String> comprador_CBox;
    private javax.swing.JButton deletar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> produto_CBox;
    private javax.swing.JButton salvar;
    private javax.swing.JFormattedTextField strDataQuitacao;
    private javax.swing.JFormattedTextField strDataVenda;
    private javax.swing.JTextField strQuantidade;
    private javax.swing.JTextField strValorPago;
    private javax.swing.JTextField strValorTotal;
    private javax.swing.JTable tabelaVendas;
    // End of variables declaration//GEN-END:variables
}
